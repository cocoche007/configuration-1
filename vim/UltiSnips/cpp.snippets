snippet unique
#ifndef __$1__
#define __$1__

$0

#endif /* __$1__ */
endsnippet
snippet sep
// ====================================
// $1
// ====================================
$0
endsnippet
snippet cls
class $1${2: : public ${3:mother}} {
    public:
        $1();
        $1(const $1 &ref);
        ~$1();

    private:
        $0
};
endsnippet
snippet cls=
class $1${2: : public ${3:mother}} {
    public:
        $1();
        $1(const $1 &ref);
        ~$1();

        $1 &operator=(const $1 &ref);

    private:
        $0
};
endsnippet
snippet incls
class $1${2: : public ${3:mother}} {
    public:
        $1()
        {
        }

        $1(const $1 &ref)
        {
        }

        ~$1()
        {
        }

    private:
        $0
};
endsnippet
snippet incls=
class $1${2: : public ${3:mother}} {
    public:
        $1()
        {
        }

        $1(const $1 &ref)
        {
        }

        ~$1()
        {
        }

        $1 &operator=(const $1 &ref)
        {
        }


    private:
        $0
};
endsnippet
snippet printf
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet
snippet extern
#ifdef __cplusplus
extern "C"
#endif

$0

#ifdef __cplusplus
}
#endif
endsnippet
snippet ns
namespace $1 {
$0
};
endsnippet
snippet minit
, m_$1($1)
endsnippet
snippet getset
$1get${2/\w+\s*/\u$0/g}()
{
    return m_$2;
}

void set${2/\w+\s*/\u$0/g}($1$2)
{
    m_$2 = $2;
}
endsnippet
